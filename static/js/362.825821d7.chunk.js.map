{"version":3,"file":"static/js/362.825821d7.chunk.js","mappings":"+PAGeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAoCC,GAApC,yFAEUC,EAFV,6CAEsDD,EAFtD,4BAEkFE,EAAAA,GAFlF,SAG2BC,EAAAA,EAAAA,IAAUF,GAHrC,UAKsC,KAF5BG,EAHV,QAKiBC,KAAKC,KAAKC,OAL3B,sBAMY,IAAIC,MAAM,oCANtB,gCASWJ,EAASC,KAAKC,MATzB,yCAWIG,QAAQC,IAAR,MAXJ,kBAYW,IAZX,iFAgBA,M,SAhBoC,GAArBX,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,SCFf,GAAgB,SAAW,uBAAuB,aAAe,2BAA2B,UAAY,wBAAwB,aAAe,2BAA2B,iBAAmB,gC,SCkD7L,MA5CA,WACE,IAAQC,GAAaW,EAAAA,EAAAA,MAAbX,SACR,GAA0BY,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0CF,EAAAA,EAAAA,WAAS,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,oGACOnB,EAAqBC,GAD5B,OACdmB,EADc,OAEpBL,EAASK,GACTH,GAAiB,GAHG,2CAAH,qDAMnBE,GACD,GAAE,CAAClB,KAGF,gBAAKoB,UAAWC,EAAAA,WAAhB,SACIN,EAEmB,IAAjBF,EAAMN,QACR,cAAGa,UAAWC,EAAAA,oBAAd,SAAuC,2CAIvC,eAAID,UAAWC,EAAAA,SAAf,SACGR,EAAMS,KACL,SAAAhB,GAAI,OACFA,EAAKiB,eACH,gBAAkBH,UAAWC,EAAAA,aAA7B,WACE,gBACEG,IAAG,0CAAqClB,EAAKiB,cAC7CE,IAAKnB,EAAKoB,KACVN,UAAWC,EAAAA,aAEb,eAAID,UAAWC,EAAAA,aAAf,SAAkCf,EAAKoB,SANhCpB,EAAKqB,GAFd,OARR,SAACC,EAAA,EAAD,KAwBP,C","sources":["components/MoviesPage/AdditionInformation/Cast/getMovieCredits.js","webpack://react-homework-template/./src/components/MoviesPage/AdditionInformation/Cast/Cast.module.css?445c","components/MoviesPage/AdditionInformation/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY } from '../../../../services/apiKey';\n\nasync function fetchGetMovieCredits(movie_id) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n\n    if (response.data.cast.length === 0) {\n      throw new Error('Backend is empty by this request');\n    }\n\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\nexport default fetchGetMovieCredits;\n\n// https://api.themoviedb.org/3/movie/569094/credits?api_key=bc05a8bb4fb28037f848a63e6395860a\n\n// {\n//     \"id\": 569094,\n//         \"cast\": [\n//             {\n//                 \"adult\": false,\n//                 \"gender\": 2,\n//                 \"id\": 587506,\n//                 \"known_for_department\": \"Acting\",\n//                 \"name\": \"Shameik Moore\",\n//                 \"original_name\": \"Shameik Moore\",\n//                 \"popularity\": 29.028,\n//                 \"profile_path\": \"/uJNaSTsfBOvtFWsPP23zNthknsB.jpg\",\n//                 \"cast_id\": 705,\n//                 \"character\": \"Miles Morales / Spider-Man (voice)\",\n//                 \"credit_id\": \"6489a4f8e375c000e251ab48\",\n//                 \"order\": 0\n//             }]\n// }\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__iuMop\",\"castListItem\":\"Cast_castListItem__146rG\",\"imageCast\":\"Cast_imageCast__MtImh\",\"castItemName\":\"Cast_castItemName__SeHwa\",\"messageEmptyCast\":\"Cast_messageEmptyCast__9g+D5\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport fetchGetMovieCredits from './getMovieCredits';\nimport Loader from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nfunction Cast() {\n  const { movie_id } = useParams();\n  const [casts, setCasts] = useState([]);\n  const [isLoadingCast, setIsLoadingCast] = useState(false);\n\n  useEffect(() => {\n    const fetchDataCast = async () => {\n      const fetchedCasts = await fetchGetMovieCredits(movie_id);\n      setCasts(fetchedCasts);\n      setIsLoadingCast(true);\n    };\n\n    fetchDataCast();\n  }, [movie_id]);\n\n  return (\n    <div className={css.boxReviews}>\n      {!isLoadingCast ? (\n        <Loader />\n      ) : casts.length === 0 ? (\n        <p className={css.messageEmptyReviews}>\n          We don't have any cast for this movie\n        </p>\n      ) : (\n        <ul className={css.castList}>\n          {casts.map(\n            cast =>\n              cast.profile_path && (\n                <li key={cast.id} className={css.castListItem}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w300/${cast.profile_path}`}\n                    alt={cast.name}\n                    className={css.imageCast}\n                  />\n                  <h3 className={css.castItemName}>{cast.name}</h3>\n                </li>\n              )\n          )}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n"],"names":["fetchGetMovieCredits","movie_id","url","API_KEY","axios","response","data","cast","length","Error","console","log","useParams","useState","casts","setCasts","isLoadingCast","setIsLoadingCast","useEffect","fetchDataCast","fetchedCasts","className","css","map","profile_path","src","alt","name","id","Loader"],"sourceRoot":""}